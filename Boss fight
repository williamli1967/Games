<script>
//instructions
//  Use the arrow keys to move around. Once you defeat enough bosses, you'll earn long-range attacks. If your health is below zero, it might say that a while loop is taking too long to run. Restart the code to play again.

//unfinished
frameRate(50);
strokeWeight(1);
//variables - your level
var level = 1;
var boss = 0;
var startfighting = 1;

//variables - your health
var maxhp = 100 * level; 
var hp = 100;
var dmg = 1;

//variables - boss's health
var bosshp = 100;
var bossmaxhp = 100;
var bossdmg = 1;

//variables - daggers (no targeting)
var daggerschance = random(1,1001);
var throwingdaggers = 2;
var udaggerx = 1000000;
var udaggery = 1000000;
var udaggerdistancex = 0;
var udaggerdistancey = 0;
//variables - attack speed and range
var attackrange = 100;
var bossattackrange = 100;

//variables - location
var ux = 100;
var uy = 300;
var bx = 300;
var by = 200;

//functions
var drawBackground = function() {
    //background
    background(0, 255, 255);
    fill(0, 255, 0);
    rect(-1,200,402,279);
    //your health
    fill(0, 0, 0);
    rect(0,380,400,20);
    fill(255, 0, 0);
    rect(0,380,hp / maxhp * 400, 20);
    fill(255, 255, 255);
    textSize(15);
    text(hp + "/" + maxhp,173,395);
};//Draws the Background

var uDagger = function() {
    if (throwingdaggers === 2) {
        udaggerx = ux;
        udaggery = uy;
        var udaggerdistance = sqrt(pow(abs(ux-bx),2) + pow(abs(uy-by),2));
        udaggerdistancex = (ux-bx) / udaggerdistance;
        udaggerdistancey = (uy-by) / udaggerdistance;
        throwingdaggers = 1;
    }
    if (throwingdaggers === 1) {
        udaggerx = udaggerx - udaggerdistancex;
        udaggery = udaggery - udaggerdistancey;
        stroke(127,127,127);
        fill(127,127,127);
        triangle(udaggerx - udaggerdistancex * 10,udaggery - udaggerdistancey* 10,udaggerx + udaggerdistancey * 5, udaggery - udaggerdistancex * 5, udaggerx - udaggerdistancey * 5, udaggery + udaggerdistancex * 5);
        stroke(0,0,0);
        if (udaggerx - bx < 50 &&udaggerx - bx > -50 &&  udaggery - by > -50 && udaggery - by < 50) {
            throwingdaggers = 0;
            bosshp = bosshp - dmg * 10;
        }
    }
};

var drawYou = function(r,g,b) {
    //body and armor
    fill(127, g*64, b*64);
    rect(ux-15,uy-50,30,75);
    quad(ux-15,uy+25,ux,uy+25,ux-10,uy+50,ux-20,uy+50);
    quad(ux+15,uy+25,ux,uy+25,ux+10,uy+50,ux+20,uy+50);
    
    //face
    fill(255, 191, 127);
    ellipse(ux, uy-50,50,50);
    fill(0, 0, 0);
    if (ux < bx-20) {
        strokeWeight(5);
        point(ux+15,uy-55);
        strokeWeight(3);
        line(ux+18,uy-59,ux+10,uy-65);
        line(ux+12,uy-38,ux+22,uy-40);
        strokeWeight(1);
    } else if (ux > bx+20) {
        strokeWeight(5);
        point(ux-15,uy-55);
        strokeWeight(3);
        line(ux-18,uy-59,ux-10,uy-65);
        line(ux-12,uy-38,ux-22,uy-40);
        strokeWeight(1);
    } else if (uy < by){
        strokeWeight(5);
        point(ux+8,uy-55);
        point(ux-8,uy-55);
        strokeWeight(3);
        line(ux-2,uy-59,ux-10,uy-65);
        line(ux+2,uy-59,ux+10,uy-65);
        line(ux-8,uy-40,ux+8,uy-40);
        strokeWeight(1);
    }
    
    //damaging the boss
    if (ux - bx < attackrange && bx - ux < attackrange && ux - bx < attackrange && ux - bx < attackrange && boss > 0) {
        bosshp = bosshp - dmg;
        var movement = random(0,11);
        stroke(r*64, g*64, b*64);
        strokeWeight(5);
        line(ux,uy,bx,by + movement * 3 - 15);
        strokeWeight(1);
        fill(127, 127, 127);
        stroke(0, 0, 0);
        quad(ux,uy-10,ux,uy+10,ux*2/3 + bx/3,uy*2/3 + by/3 + 10 + movement-5,ux*2/3 + bx/3,uy*2/3 + by/3 - 10 + movement-5);
    }
    daggerschance = random(1,1001);
    if (throwingdaggers === 0 && boss > 0) {
        throwingdaggers = 2;
    }
    if (throwingdaggers > 0 && boss > 0) {
        uDagger();
    }
    
    //update health and damage
    maxhp = level * 1000;
    dmg = level;
    
};//Draws you, the main character

var drawBoss = function(r,g,b,damage,health) {
    //body and armor
    fill(r*64, g*64, b*64);
    rect(bx-15,by-50,30,75);
    quad(bx-15,by+25,bx,by+25,bx-10,by+50,bx-20,by+50);
    quad(bx+15,by+25,bx,by+25,bx+10,by+50,bx+20,by+50);
    
    //face
    fill(255, 191, 127);
    ellipse(bx, by-50,50,50);
    stroke(r*64, g*64, b*64);
    strokeWeight(5);
    if (bx < ux-20) {
        point(bx+15,by-55);
        stroke(0, 0, 0);
        strokeWeight(3);
        line(bx+18,by-59,bx+10,by-65);
        line(bx+12,by-38,bx+22,by-40);
    } else if (bx > ux+20) {
        point(bx-15,by-55);
        stroke(0, 0, 0);
        strokeWeight(3);
        line(bx-18,by-59,bx-10,by-65);
        line(bx-12,by-38,bx-22,by-40);
    } else if (by < uy){
        point(bx+8,by-55);
        point(bx-8,by-55);
        stroke(0, 0, 0);
        strokeWeight(3);
        line(bx-2,by-59,bx-10,by-65);
        line(bx+2,by-59,bx+10,by-65);
        line(bx-8,by-40,bx+8,by-40);
    } else {
        strokeWeight(1);
        stroke(0, 0, 0);
    }
    strokeWeight(1);
    
    //hp
    fill(0, 0, 0);
    rect(20,30,360,20);
    fill(r*64, g*64, b*64);
    textSize(25);
    text("BOSS",165,25);
    rect(20,30,bosshp / health * 360, 20);
    fill(255, 255, 255);
    textSize(15);
    text(bosshp + "/" + health,173,45);
    
    //damaging you
    bossdmg = damage;
    if (ux - bx < attackrange && bx - ux < attackrange && ux - bx < attackrange && ux - bx < attackrange) {
        var bossmovement = random(-5,6);
        hp = hp - bossdmg;
        stroke(r*64, g*64, b*64);
        strokeWeight(5);
        line(bx,by,ux,uy + bossmovement * 3);
        strokeWeight(1);
        fill(r*64, g*64, b*64);
        stroke(0, 0, 0);
        quad(bx,by-10,bx,by+10,bx*2/3 + ux/3,by*2/3 + uy/3 + 10 + bossmovement,bx*2/3 + ux/3,by*2/3 + uy/3 - 10 + bossmovement);
    }
    
    //update health and damage
    bossmaxhp = health;
    bossdmg = damage;
    if(startfighting === 1) {
        bossmaxhp = health;
        bosshp = bossmaxhp;
    }
    
};//Draws the boss

//the actual game
draw = function() {
    drawBackground();
    
    //movement
    if (keyIsPressed && keyCode === UP) {
        uy -= 3;
    }
    if (keyIsPressed && keyCode === DOWN) {
        uy += 3;
    }
    if (keyIsPressed && keyCode === LEFT) {
        ux -= 3;
    }
    if (keyIsPressed && keyCode === RIGHT) {
        ux += 3;
    }
    
    //boundaries
    if (ux < 25){
        ux = 25;
    }
    if (ux > 375){
        ux = 375;
    }
    if (uy < 72){
        uy = 72;
    }
    if (uy > 330){
        uy = 330;
    }
    
    //gravity
    if (uy < 150){
        uy = uy+2;
    }
    
    //make boss appear
    if (mouseIsPressed) {
        boss = level;
        if (bosshp <= 0) {
            bosshp = bossmaxhp;
            startfighting = 1;
        }
    }
    
    //draw you and boss(es)
    if (boss === 1 && by < uy) {
            drawBoss(2,2,2,0.5,100);
            drawYou(2,2,2);
    } else if (boss === 1 ) {
            drawYou(2,2,2);
            drawBoss(2,2,2,0.5,100);
    } else if (boss === 2 && by < uy) {
            drawBoss(0,2,0,5,500);
            drawYou(2,2,2);
    } else if (boss === 2 ) {
            drawYou(2,2,2);
            drawBoss(0,2,0,5,500);
    } else if (boss === 3 && by < uy) {
            drawBoss(0,0,2,10,1000);
            drawYou(2,2,2);
    } else if (boss === 3 ) {
            drawYou(2,2,2);
            drawBoss(0,0,2,10,1000);
    } else {
        drawYou(2,2,2);
    }
    
    //change hp if you start fighting
    if (startfighting === 1) {
        hp = maxhp;
    }
    
    //defeating the boss
    if (bosshp <= 0) {
        boss = 0;
        level = level + 1;
        maxhp = level * 1000;
        hp = maxhp;
        dmg = level;
        if (level === 2) {
            bosshp = 500;
        } else if (level === 3) {
            bosshp = 1000;
        }
    }
    
    //game over screen
    if (hp <=0) {
        fill(0, 0, 0);
        rect(-1,-1,402,402);
        fill(255, 0, 0);
        textSize(50);
        text("GAME OVER",50,200);
        while (hp <=0) {
            hp = 0;
            fill(0, 0, 0);
            rect(-1,-1,402,402);
            fill(255, 0, 0);
            textSize(50);
            text("GAME OVER",50,200);
        }
    }
    
    //test functions here
    
    //stop the tests here
    
    startfighting = 0;
};

</script>
